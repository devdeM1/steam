swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger Rest Article
consumes:
  - application/json
produces:
  - application/json

basePath: /api

# Paths supported by the server application
paths:
  /games:
    get:
      operationId: games.read_all
      tags:
        - Games
      summary: Read the entire set of games, sorted by name
      description: Read the entire set of games, sorted by name
      responses:
        200:
          description: Successfully read game set operation
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                  description: Id of the game
                name:
                  type: string
                  description: Name of the game
                price:
                  type: integer
                  description: Price of the game
                genre:
                  type: string
                  description: Genre of the game
                point:
                  type: integer
                  description: Point of the game
    post:
      operationId: games.create
      tags:
        - Games
      summary: Create a game
      description: Create a new game
      parameters:
        - name: game
          in: body
          description: Game to create
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the game
              price:
                type: integer
                description: Price of the game
              genre:
                type: string
                description: Genre of the game
              point:
                type: integer
                description: Point of the game
      responses:
        201:
          description: Successfully created game
          schema:
            properties:
              id:
                type: integer
                description: Id of the game
              name:
                type: string
                description: Name of the game
              price:
                type: integer
                description: Price of the game
              genre:
                type: string
                description: Genre of the game
              point:
                type: integer
                description: Point of the game
  /games/{received_game_name}:
    get:
      operationId: games.read_one
      tags:
        - Games
      summary: Read one game
      description: Read one game
      parameters:
        - name: received_game_name
          in: path
          description: Name of the game to get
          type: string
          required: True
      responses:
        200:
          description: Successfully read game from games data operation
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Id of the game
              name:
                type: string
                description: Name of the game
              price:
                type: integer
                description: Price of the game
              genre:
                type: string
                description: Genre of the game
              point:
                type: integer
                description: Point of the game
    put:
      operationId: games.update
      tags:
        - Games
      summary: Update a game
      description: Update a game
      parameters:
        - name: received_game_name
          in: path
          description: Id of the game to get
          type: string
          required: True
        - name: game
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the game
              price:
                type: integer
                description: Price of the game
              genre:
                type: string
                description: Genre of the game
              point:
                type: integer
                description: Point of the game
      responses:
        200:
          description: Successfully updated game
          schema:
            properties:
              id:
                type: integer
                description: Id of the game
              name:
                type: string
                description: Name of the game
              price:
                type: integer
                description: Price of the game
              genre:
                type: string
                description: Genre of the game
              point:
                type: integer
                description: Point of the game
    delete:
      operationId: games.delete
      tags:
        - Games
      summary: Delete a game from the games list
      description: Delete a game
      parameters:
        - name: received_game_name
          in: path
          type: string
          description: Name of the game to delete
          required: true
      responses:
        200:
          description: Successfully deleted a game
  /games/stats/{received_game_name}:
    get:
      operationId: stats.stats_for_one_game
      tags:
        - Games
      summary: Number of all users for this game
      description: Number of all users for this game
      parameters:
        - name: received_game_name
          in: path
          description: Name of the game to get
          type: string
          required: True
      responses:
        200:
          description: Successfully
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Number of users
  /users:
    get:
      operationId: users.read_all
      tags:
        - Users
      summary: Read the entire set of users, sorted by name
      description: Read the entire set of users, sorted by name
      responses:
        200:
          description: Successfully read users set operation
          schema:
            type: array
            items:
              properties:
                user_id:
                  type: integer
                  description: Id of the user
                name:
                  type: string
                  description: Name of the user
                date:
                  type: string
                  description: Date of birth
                balance:
                  type: integer
                  description: Balance
                country:
                  type: string
                  description: Country of Residence
                sex:
                  type: string
                  description: User Gender
    post:
      operationId: users.create
      tags:
        - Users
      summary: Create a user
      description: Create a new user
      parameters:
        - name: user
          in: body
          description: User to create
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the user
              date:
                type: string
                description: Date of birth
              balance:
                type: integer
                description: Balance
              country:
                type: string
                description: Country of Residence
              sex:
                type: string
                description: User Gender
      responses:
        201:
          description: Successfully created user
          schema:
            properties:
              user_id:
                type: integer
                description: Id of the user
              name:
                type: string
                description: Name of the user
              date:
                type: string
                description: Date of birth
              balance:
                type: integer
                description: Balance
              country:
                type: string
                description: Country of Residence
              sex:
                type: string
                description: User Gender
  /users/{received_user_name}:
    get:
      operationId: users.read_one
      tags:
        - Users
      summary: Read user
      description: Read user
      parameters:
        - name: received_user_name
          in: path
          description: Name of the user to get
          type: string
          required: True
      responses:
        200:
          description: Successfully read user from users data operation
          schema:
            type: object
            properties:
              user_id:
                type: integer
                description: Id of the user
              name:
                type: string
                description: Name of the user
              date:
                type: string
                description: Date of birth
              balance:
                type: integer
                description: Balance
              country:
                type: string
                description: Country of Residence
              sex:
                type: string
                description: User Gender
    put:
      operationId: users.update
      tags:
        - Users
      summary: Update a user
      description: Update a user
      parameters:
        - name: received_user_name
          in: path
          description: Name of the user to get
          type: string
          required: True
        - name: user
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the user
              date:
                type: string
                description: Date of birth
              balance:
                type: integer
                description: Balance
              country:
                type: string
                description: Country of Residence
              sex:
                type: string
                description: User Gender
      responses:
        200:
          description: Successfully updated user
          schema:
            properties:
              user_id:
                type: integer
                description: Id of the user
              name:
                type: string
                description: Name of the user
              date:
                type: string
                description: Date of birth
              balance:
                type: integer
                description: Balance
              country:
                type: string
                description: Country of Residence
              sex:
                type: string
                description: User Gender
    delete:
      operationId: users.delete
      tags:
        - Users
      summary: Delete a user from the users list
      description: Delete a user
      parameters:
        - name: received_user_name
          in: path
          type: string
          description: Id of the user to delete
          required: true
      responses:
        200:
          description: Successfully deleted a user
  /users/{user_name}/community:
    get:
      operationId: users.view_community
      tags:
        - Users
      summary: Read list of communities for user
      description: Read list of communities for user
      parameters:
        - name: user_name
          in: path
          description: Name of the user
          type: string
          required: True
      responses:
        200:
          description: Successfully read list of communities
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the community
  /users/{user_name}/games:
    get:
      operationId: users.view_games
      tags:
        - Users
      summary: Read list of games for user
      description: Read list of games for user
      parameters:
        - name: user_name
          in: path
          description: Name of the user
          type: string
          required: True
      responses:
        200:
          description: Successfully read list of games
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the game
              genre:
                type: string
                description: Name of the genre
  /users/{user_name}/{game_name}:
    put:
      operationId: users.buy_game
      tags:
        - Users
      summary: Buy a game for user
      description: Buy a game for user
      parameters:
        - name: user_name
          in: path
          description: Name of the user to buy a game
          type: string
          required: True
        - name: game_name
          in: path
          description: Name of the game to buy
          type: string
          required: True
      responses:
        200:
          description: Game added successfully
  /users/{user_name}/community/{community_name}:
    put:
      operationId: users.join_the_community
      tags:
        - Users
      summary: Sign in to the community
      description: Sign in to the community
      parameters:
        - name: user_name
          in: path
          description: Name of the user
          type: string
          required: True
        - name: community_name
          in: path
          description: Name of the community
          type: string
          required: True
      responses:
        200:
          description: Successfully joined the group
  /users/{user_name}/balance/{sum}:
    put:
      operationId: users.deposit
      tags:
        - Users
      summary: Deposit
      description: Deposit
      parameters:
        - name: user_name
          in: path
          description: Name of the user
          type: string
          required: True
        - name: sum
          in: path
          description: Sum of the money to deposit
          type: string
          required: True
      responses:
        200:
          description: Deposit was successfully processed and credited to the account
  /genre:
    get:
      operationId: genre.read_all
      tags:
        - Genre
      summary: Read the entire set of genres, sorted by name
      description: Read the entire set of genres, sorted by name
      responses:
        200:
          description: Successfully read genres set operation
          schema:
            type: array
            items:
              properties:
                genre_id:
                  type: integer
                  description: Id of the genre
                name:
                  type: string
                  description: Name of the genre
    post:
      operationId: genre.create
      tags:
        - Genre
      summary: Create a genre
      description: Create a new genre
      parameters:
        - name: genre
          in: body
          description: Genre to create
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the genre
      responses:
        201:
          description: Successfully created genre
          schema:
            properties:
              id:
                type: integer
                description: Id of the genre
              name:
                type: string
                description: Name of the genre
  /genres/{received_genre_name}:
    get:
      operationId: genre.read_one
      tags:
        - Genre
      summary: Read genre
      description: Read genre
      parameters:
        - name: received_genre_name
          in: path
          description: Name of the genre to get
          type: string
          required: True
      responses:
        200:
          description: Successfully read genre from genres data operation
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Id of the genre
              name:
                type: string
                description: Name of the genre
    put:
      operationId: genre.update
      tags:
        - Genre
      summary: Update a genre
      description: Update a genre
      parameters:
        - name: received_genre_name
          in: path
          description: Name of the genre to get
          type: string
          required: True
        - name: genre
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the genre
      responses:
        200:
          description: Successfully updated genre
          schema:
            properties:
              id:
                type: integer
                description: Id of the genre
              name:
                type: string
                description: Name of the genre
    delete:
      operationId: genre.delete
      tags:
        - Genre
      summary: Delete a genre from the genres list
      description: Delete a genre
      parameters:
        - name: received_genre_name
          in: path
          type: string
          description: Name of the genre to delete
          required: true
      responses:
        200:
          description: Successfully deleted a genre
  /community:
    get:
      operationId: community.read_all
      tags:
        - Community
      summary: Read the entire set of community, sorted by name
      description: Read the entire set of community, sorted by name
      responses:
        200:
          description: Successfully read communities set operation
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                  description: Id of the community
                name:
                  type: string
                  description: Name of the community
    post:
      operationId: community.create
      tags:
        - Community
      summary: Create a community
      description: Create a new community
      parameters:
        - name: community
          in: body
          description: Community to create
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the community
      responses:
        201:
          description: Successfully created community
          schema:
            properties:
              id:
                type: integer
                description: Id of the community
              name:
                type: string
                description: Name of the community
  /community/{received_community_name}:
    get:
      operationId: community.read_one
      tags:
        - Community
      summary: Read community
      description: Read community
      parameters:
        - name: received_community_name
          in: path
          description: Name of the community to get
          type: string
          required: True
      responses:
        200:
          description: Successfully read community from communities data operation
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Id of the community
              name:
                type: string
                description: Name of the community
    put:
      operationId: community.update
      tags:
        - Community
      summary: Update a community
      description: Update a community
      parameters:
        - name: received_community_name
          in: path
          description: Name of the community to get
          type: string
          required: True
        - name: community
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the community
      responses:
        200:
          description: Successfully updated community
          schema:
            properties:
              id:
                type: integer
                description: Id of the community
              name:
                type: string
                description: Name of the community
    delete:
      operationId: community.delete
      tags:
        - Community
      summary: Delete a community from the communities list
      description: Delete a community
      parameters:
        - name: received_community_name
          in: path
          type: string
          description: Name of the community to delete
          required: true
      responses:
        200:
          description: Successfully deleted a community
  /stats:
    get:
      operationId: stats.every_game
      tags:
        - Stats
      summary: Stats for every game
      description: Stats for every game
      responses:
        200:
          description: Successfully
          schema:
            type: array
            items:
              properties:
                name:
                  type: string
                  description: Name of the game
                count:
                  type: integer
                  description: Number of users
  /stats/users:
    get:
      operationId: stats.all_users
      tags:
        - Stats
      summary: Number of all users
      description: Number of all users
      responses:
        200:
          description: Successfully
          schema:
            type: array
            items:
              properties:
                count:
                  type: integer
                  description: Number of users